function [adigatorFunInfo, adigatorOutputs] = adigatortempfunc1(adigatorFunInfo,adigatorInputs)
[flag, adigatorFunInfo, adigatorInputs, adigatorDerivData] = adigatorFunctionInitialize(1,adigatorFunInfo,adigatorInputs);
if flag; adigatorOutputs = adigatorInputs; return; end;
Gator1Indices = adigatorDerivData.Gator1Indices;
Gator1Data = adigatorDerivData.Gator1Data;
X = adigatorInputs{1};
mu = adigatorInputs{2};
CP = adigatorInputs{3};
adigatorVarAnalyzer('%User Line: % Value = logmvnpdf(X,mu,Sigma)');
adigatorVarAnalyzer('%User Line: % Derivatives of the log multivariate normal pdf at points X for mean mu and covariance Sigma.');
adigatorVarAnalyzer('%User Line: %');
adigatorVarAnalyzer('%User Line: % In:');
adigatorVarAnalyzer('%User Line: %   X : points at which to evaluate the log-pdf [#dims x #obs]');
adigatorVarAnalyzer('%User Line: %');
adigatorVarAnalyzer('%User Line: %   mu : mean vector [#dims x 1]');
adigatorVarAnalyzer('%User Line: %');
adigatorVarAnalyzer('%User Line: %   CP : cholesky factor of precision matrix [#dims x #dims]');
adigatorVarAnalyzer('%User Line: %');
adigatorVarAnalyzer('%User Line: % Out:');
adigatorVarAnalyzer('%User Line: %   Value : the log-pdf evaluated at X [1 x #obs]');
adigatorVarAnalyzer('%User Line: %mu = repmat(mu,1,size(X,2)); --> gives an error');
cada1f1dx = X.dx;
cada1f1dx = adigatorVarAnalyzer('cada1f1dx = X.dx;',cada1f1dx,'cada1f1dx',0);
cada1f1dmu = -mu.dmu;
cada1f1dmu = adigatorVarAnalyzer('cada1f1dmu = -mu.dmu;',cada1f1dmu,'cada1f1dmu',0);
cada1f1 = X.f - mu.f;
cada1f1 = adigatorVarAnalyzer('cada1f1 = X.f - mu.f;',cada1f1,'cada1f1',0);
cada1td1 = sparse(Gator1Indices.Index1,Gator1Indices.Index2,cada1f1dx,20,20);
cada1td1 = adigatorVarAnalyzer('cada1td1 = sparse(Gator1Indices.Index1,Gator1Indices.Index2,cada1f1dx,20,20);',cada1td1,'cada1td1',0);
cada1td1 = CP.f*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = CP.f*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
F.dx = full(cada1td1(Gator1Indices.Index3));
F.dx = adigatorVarAnalyzer('F.dx = full(cada1td1(Gator1Indices.Index3));',F.dx,'F.dx',0);
cada1td1 = sparse(Gator1Indices.Index4,Gator1Indices.Index5,cada1f1dmu,20,20);
cada1td1 = adigatorVarAnalyzer('cada1td1 = sparse(Gator1Indices.Index4,Gator1Indices.Index5,cada1f1dmu,20,20);',cada1td1,'cada1td1',0);
cada1td1 = CP.f*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = CP.f*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
F.dmu = full(cada1td1(Gator1Indices.Index6));
F.dmu = adigatorVarAnalyzer('F.dmu = full(cada1td1(Gator1Indices.Index6));',F.dmu,'F.dmu',0);
cada1td1 = sparse(Gator1Indices.Index7,Gator1Indices.Index8,CP.dCP,20,8000);
cada1td1 = adigatorVarAnalyzer('cada1td1 = sparse(Gator1Indices.Index7,Gator1Indices.Index8,CP.dCP,20,8000);',cada1td1,'cada1td1',0);
cada1td1 = cada1f1.'*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1f1.''*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
F.dCP = full(cada1td1(Gator1Indices.Index9));
F.dCP = adigatorVarAnalyzer('F.dCP = full(cada1td1(Gator1Indices.Index9));',F.dCP,'F.dCP',0);
F.f = CP.f*cada1f1;
F.f = adigatorVarAnalyzer('F.f = CP.f*cada1f1;',F.f,'F.f',0);
adigatorVarAnalyzer('%User Line: F = CP*(X - mu);');
cada1f1 = size(X.f,1);
cada1f1 = adigatorVarAnalyzer('cada1f1 = size(X.f,1);',cada1f1,'cada1f1',0);
cada1f2 = -0.5.*cada1f1;
cada1f2 = adigatorVarAnalyzer('cada1f2 = -0.5.*cada1f1;',cada1f2,'cada1f2',0);
cada1f3 = cada1f2.*1.837877066409345;
cada1f3 = adigatorVarAnalyzer('cada1f3 = cada1f2.*1.837877066409345;',cada1f3,'cada1f3',0);
cada1f4dCP = CP.dCP(Gator1Indices.Index10);
cada1f4dCP = adigatorVarAnalyzer('cada1f4dCP = CP.dCP(Gator1Indices.Index10);',cada1f4dCP,'cada1f4dCP',0);
cada1f4 = diag(CP.f,0);
cada1f4 = adigatorVarAnalyzer('cada1f4 = diag(CP.f,0);',cada1f4,'cada1f4',0);
cada1f5dCP = 1./cada1f4(:).*cada1f4dCP;
cada1f5dCP = adigatorVarAnalyzer('cada1f5dCP = 1./cada1f4(:).*cada1f4dCP;',cada1f5dCP,'cada1f5dCP',0);
cada1f5 = log(cada1f4);
cada1f5 = adigatorVarAnalyzer('cada1f5 = log(cada1f4);',cada1f5,'cada1f5',0);
cada1tf2 = ones(1,20);
cada1tf2 = adigatorVarAnalyzer('cada1tf2 = ones(1,20);',cada1tf2,'cada1tf2',0);
cada1td1 = sparse(Gator1Indices.Index11,Gator1Indices.Index12,cada1f5dCP,20,400);
cada1td1 = adigatorVarAnalyzer('cada1td1 = sparse(Gator1Indices.Index11,Gator1Indices.Index12,cada1f5dCP,20,400);',cada1td1,'cada1td1',0);
cada1td1 = cada1tf2*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf2*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
cada1f6dCP = full(cada1td1(Gator1Indices.Index13));
cada1f6dCP = adigatorVarAnalyzer('cada1f6dCP = full(cada1td1(Gator1Indices.Index13));',cada1f6dCP,'cada1f6dCP',0);
cada1f6 = sum(cada1f5);
cada1f6 = adigatorVarAnalyzer('cada1f6 = sum(cada1f5);',cada1f6,'cada1f6',0);
cada1f7dCP = cada1f6dCP;
cada1f7dCP = adigatorVarAnalyzer('cada1f7dCP = cada1f6dCP;',cada1f7dCP,'cada1f7dCP',0);
cada1f7 = cada1f3 + cada1f6;
cada1f7 = adigatorVarAnalyzer('cada1f7 = cada1f3 + cada1f6;',cada1f7,'cada1f7',0);
cada1tf1 = F.f(Gator1Indices.Index14);
cada1tf1 = adigatorVarAnalyzer('cada1tf1 = F.f(Gator1Indices.Index14);',cada1tf1,'cada1tf1',0);
cada1td1 = cada1tf1(:).*F.dx;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf1(:).*F.dx;',cada1td1,'cada1td1',0);
cada1tf1 = F.f(Gator1Indices.Index15);
cada1tf1 = adigatorVarAnalyzer('cada1tf1 = F.f(Gator1Indices.Index15);',cada1tf1,'cada1tf1',0);
cada1td1 = cada1td1 + cada1tf1(:).*F.dx;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1 + cada1tf1(:).*F.dx;',cada1td1,'cada1td1',0);
cada1f8dx = cada1td1;
cada1f8dx = adigatorVarAnalyzer('cada1f8dx = cada1td1;',cada1f8dx,'cada1f8dx',0);
cada1tf1 = F.f(Gator1Indices.Index16);
cada1tf1 = adigatorVarAnalyzer('cada1tf1 = F.f(Gator1Indices.Index16);',cada1tf1,'cada1tf1',0);
cada1td1 = cada1tf1(:).*F.dmu;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf1(:).*F.dmu;',cada1td1,'cada1td1',0);
cada1tf1 = F.f(Gator1Indices.Index17);
cada1tf1 = adigatorVarAnalyzer('cada1tf1 = F.f(Gator1Indices.Index17);',cada1tf1,'cada1tf1',0);
cada1td1 = cada1td1 + cada1tf1(:).*F.dmu;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1 + cada1tf1(:).*F.dmu;',cada1td1,'cada1td1',0);
cada1f8dmu = cada1td1;
cada1f8dmu = adigatorVarAnalyzer('cada1f8dmu = cada1td1;',cada1f8dmu,'cada1f8dmu',0);
cada1tf1 = F.f(Gator1Indices.Index18);
cada1tf1 = adigatorVarAnalyzer('cada1tf1 = F.f(Gator1Indices.Index18);',cada1tf1,'cada1tf1',0);
cada1td1 = cada1tf1(:).*F.dCP;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf1(:).*F.dCP;',cada1td1,'cada1td1',0);
cada1tf1 = F.f(Gator1Indices.Index19);
cada1tf1 = adigatorVarAnalyzer('cada1tf1 = F.f(Gator1Indices.Index19);',cada1tf1,'cada1tf1',0);
cada1td1 = cada1td1 + cada1tf1(:).*F.dCP;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1 + cada1tf1(:).*F.dCP;',cada1td1,'cada1td1',0);
cada1f8dCP = cada1td1;
cada1f8dCP = adigatorVarAnalyzer('cada1f8dCP = cada1td1;',cada1f8dCP,'cada1f8dCP',0);
cada1f8 = F.f.*F.f;
cada1f8 = adigatorVarAnalyzer('cada1f8 = F.f.*F.f;',cada1f8,'cada1f8',0);
cada1tf2 = ones(1,20);
cada1tf2 = adigatorVarAnalyzer('cada1tf2 = ones(1,20);',cada1tf2,'cada1tf2',0);
cada1td1 = zeros(20,20);
cada1td1 = adigatorVarAnalyzer('cada1td1 = zeros(20,20);',cada1td1,'cada1td1',0);
cada1td1(Gator1Indices.Index20) = cada1f8dx;
cada1td1 = adigatorVarAnalyzer('cada1td1(Gator1Indices.Index20) = cada1f8dx;',cada1td1,'cada1td1',1);
cada1td1 = cada1tf2*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf2*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
cada1f9dx = cada1td1(Gator1Indices.Index21);
cada1f9dx = adigatorVarAnalyzer('cada1f9dx = cada1td1(Gator1Indices.Index21);',cada1f9dx,'cada1f9dx',0);
cada1td1 = zeros(20,20);
cada1td1 = adigatorVarAnalyzer('cada1td1 = zeros(20,20);',cada1td1,'cada1td1',0);
cada1td1(Gator1Indices.Index22) = cada1f8dmu;
cada1td1 = adigatorVarAnalyzer('cada1td1(Gator1Indices.Index22) = cada1f8dmu;',cada1td1,'cada1td1',1);
cada1td1 = cada1tf2*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf2*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
cada1f9dmu = cada1td1(Gator1Indices.Index23);
cada1f9dmu = adigatorVarAnalyzer('cada1f9dmu = cada1td1(Gator1Indices.Index23);',cada1f9dmu,'cada1f9dmu',0);
cada1td1 = sparse(Gator1Indices.Index24,Gator1Indices.Index25,cada1f8dCP,20,400);
cada1td1 = adigatorVarAnalyzer('cada1td1 = sparse(Gator1Indices.Index24,Gator1Indices.Index25,cada1f8dCP,20,400);',cada1td1,'cada1td1',0);
cada1td1 = cada1tf2*cada1td1;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1tf2*cada1td1;',cada1td1,'cada1td1',0);
cada1td1 = cada1td1(:);
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1(:);',cada1td1,'cada1td1',0);
cada1f9dCP = full(cada1td1(Gator1Indices.Index26));
cada1f9dCP = adigatorVarAnalyzer('cada1f9dCP = full(cada1td1(Gator1Indices.Index26));',cada1f9dCP,'cada1f9dCP',0);
cada1f9 = sum(cada1f8);
cada1f9 = adigatorVarAnalyzer('cada1f9 = sum(cada1f8);',cada1f9,'cada1f9',0);
cada1f10dx = 0.5.*cada1f9dx;
cada1f10dx = adigatorVarAnalyzer('cada1f10dx = 0.5.*cada1f9dx;',cada1f10dx,'cada1f10dx',0);
cada1f10dmu = 0.5.*cada1f9dmu;
cada1f10dmu = adigatorVarAnalyzer('cada1f10dmu = 0.5.*cada1f9dmu;',cada1f10dmu,'cada1f10dmu',0);
cada1f10dCP = 0.5.*cada1f9dCP;
cada1f10dCP = adigatorVarAnalyzer('cada1f10dCP = 0.5.*cada1f9dCP;',cada1f10dCP,'cada1f10dCP',0);
cada1f10 = 0.5.*cada1f9;
cada1f10 = adigatorVarAnalyzer('cada1f10 = 0.5.*cada1f9;',cada1f10,'cada1f10',0);
v.dx = -cada1f10dx;
v.dx = adigatorVarAnalyzer('v.dx = -cada1f10dx;',v.dx,'v.dx',0);
v.dmu = -cada1f10dmu;
v.dmu = adigatorVarAnalyzer('v.dmu = -cada1f10dmu;',v.dmu,'v.dmu',0);
cada1td1 = zeros(400,1);
cada1td1 = adigatorVarAnalyzer('cada1td1 = zeros(400,1);',cada1td1,'cada1td1',0);
cada1td1(Gator1Indices.Index27) = cada1f7dCP;
cada1td1 = adigatorVarAnalyzer('cada1td1(Gator1Indices.Index27) = cada1f7dCP;',cada1td1,'cada1td1',1);
cada1td1 = cada1td1 + -cada1f10dCP;
cada1td1 = adigatorVarAnalyzer('cada1td1 = cada1td1 + -cada1f10dCP;',cada1td1,'cada1td1',0);
v.dCP = cada1td1;
v.dCP = adigatorVarAnalyzer('v.dCP = cada1td1;',v.dCP,'v.dCP',0);
v.f = cada1f7 - cada1f10;
v.f = adigatorVarAnalyzer('v.f = cada1f7 - cada1f10;',v.f,'v.f',0);
adigatorVarAnalyzer('%User Line: v = -0.5*size(X,1)*log(2*pi) + sum(log(diag(CP))) - 0.5*sum(F.*F);');
adigatorVarAnalyzer('%User Line: % sample adigator lines:');
adigatorVarAnalyzer('%User Line: % d=20; adigator(''testmvnpdf'',{adigatorCreateDerivInput([d,1],''x''),adigatorCreateDerivInput([d,1],''mu''),adigatorCreateDerivInput([d,d],''CP'')},''d_testmvnpdf'')');
adigatorVarAnalyzer('%User Line: % adigator(''d_testmvnpdf'',{struct(''f'',adigatorCreateDerivInput([d,1],''x''),''dx'',ones(d,1)),struct(''f'',adigatorCreateDerivInput([d,1],''mu''),''dmu'',ones(d,1)),struct(''f'',adigatorCreateDerivInput([d,d],''CP''),''dCP'',ones(d*d,1))},''dd_testmvnpdf'')');
adigatorVarAnalyzer('%User Line: %');
adigatorVarAnalyzer('%User Line: % res = d_testmvnpdf(struct(''f'',randn(d,1),''dx'',ones(d,1)),struct(''f'',randn(d,1),''dmu'',ones(d,1)),struct(''f'',randn(d,d),''dCP'',ones(d*d,1)))');
adigatorVarAnalyzer('%User Line: % res = dd_testmvnpdf(struct(''f'',randn(d,1),''dx'',ones(d,1)),struct(''f'',randn(d,1),''dmu'',ones(d,1)),struct(''f'',randn(d,d),''dCP'',ones(d*d,1)))');
v.dx_size = 20;
v.dx_size = adigatorVarAnalyzer('v.dx_size = 20;',v.dx_size,'v.dx_size',0);
v.dx_location = Gator1Indices.Index28;
v.dx_location = adigatorVarAnalyzer('v.dx_location = Gator1Indices.Index28;',v.dx_location,'v.dx_location',0);
v.dmu_size = 20;
v.dmu_size = adigatorVarAnalyzer('v.dmu_size = 20;',v.dmu_size,'v.dmu_size',0);
v.dmu_location = Gator1Indices.Index29;
v.dmu_location = adigatorVarAnalyzer('v.dmu_location = Gator1Indices.Index29;',v.dmu_location,'v.dmu_location',0);
v.dCP_size = [20,20];
v.dCP_size = adigatorVarAnalyzer('v.dCP_size = [20,20];',v.dCP_size,'v.dCP_size',0);
v.dCP_location = Gator1Indices.Index30;
v.dCP_location = adigatorVarAnalyzer('v.dCP_location = Gator1Indices.Index30;',v.dCP_location,'v.dCP_location',0);
adigatorOutputs = {v};
[adigatorFunInfo, adigatorOutputs] = adigatorFunctionEnd(1,adigatorFunInfo,adigatorOutputs);
